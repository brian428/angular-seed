{"version":3,"file":"angular-seed-test-all.js","sources":["_all.ts","controllers/AppController.ts","services/ScenarioService.ts","config/Application.ts","interfaces/IAppScope.ts","interfaces/IDataResult.ts","models/AffectedItem.ts","models/EffectivenessRating.ts","models/InitialDataMap.ts","models/Probability.ts","models/RevenueImpact.ts","models/Scenario.ts","models/ScenarioItem.ts","modules/main/interfaces/IMainScope.ts","modules/main/controllers/MainController.ts"],"names":["app","app.AppController","app.AppController.constructor","app.AppController.loadInitialData","app.AppController.newScenario","app.AppController.addTestScenario","app.AppController.getRandomInt","app.AppController.createUUID","app.ScenarioService","app.ScenarioService.constructor","app.ScenarioService.loadScenarios","app.ScenarioService.saveScenarios","app.ScenarioService.loadProbabilities","app.ScenarioService.loadRevenueImpacts","app.ScenarioService.loadAffectedItems","app.ScenarioService.loadEffectivenessRatings","app.ScenarioService.loadInitialData","app.AffectedItem","app.AffectedItem.constructor","app.EffectivenessRating","app.EffectivenessRating.constructor","app.InitialDataMap","app.InitialDataMap.constructor","app.Probability","app.Probability.constructor","app.RevenueImpact","app.RevenueImpact.constructor","app.Scenario","app.Scenario.constructor","app.ScenarioItem","app.ScenarioItem.constructor","main","main.MainController","main.MainController.constructor"],"mappings":"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","sourcesContent":["/// <reference path='../ts_definitions/libs/angularjs/angular.d.ts' />\r\n/// <reference path='../ts_definitions/libs/angularjs/angular-animate.d.ts' />\r\n/// <reference path='../ts_definitions/libs/angularjs/angular-mocks.d.ts' />\r\n/// <reference path='../ts_definitions/libs/angularjs/angular-route.d.ts' />\r\n/// <reference path='../ts_definitions/libs/angular-ui-bootstrap/angular-ui-bootstrap.d.ts' />\r\n/// <reference path='../ts_definitions/libs/ng-grid/ng-grid.d.ts' />\r\n","/// <reference path='../_all.ts' />\n\nmodule app {\n\n    export class AppController {\n\n        private scope:app.IAppScope;\n        private scenarioService:app.ScenarioService;\n\n        public static $inject = [\n            '$scope',\n            'scenarioService',\n            '$location'\n        ];\n\n        constructor( $scope:app.IAppScope, scenarioService:app.ScenarioService, $location:ng.ILocationService ) {\n            this.scope = $scope;\n            this.scope.vm = this;\n            this.scope.tabs = [];\n            this.scenarioService = scenarioService;\n            this.loadInitialData();\n        }\n\n        loadInitialData() {\n            var me = this;\n            this.scenarioService.loadInitialData().then(\n                ( data:InitialDataMap ) => {\n                    me.scope.scenarios = data.scenarios;\n                    me.scope.affectedItems = data.affectedItems;\n                    me.scope.probabilities = data.probabilities;\n                    me.scope.revenueImpacts = data.revenueImpacts;\n                    me.scope.effectivenessRatings = data.effectivenessRatings;\n\n                    // Test adding a scenario to the tabs.\n                    /*\n                    angular.forEach( me.scope.scenarios, ( thisScenario:Scenario, index ) => {\n                        var value:any = {\n                            title: thisScenario.name,\n                            content: thisScenario.description,\n                            disabled: false\n                        };\n                        me.scope.tabs.push( value );\n                    } )\n                    */\n                }\n            );\n        }\n\n        newScenario() {\n            var value:any = {\n                title: \"New Scenario\",\n                content: \"New scenario form\",\n                scenario: new Scenario(),\n                active: true,\n                template: \"views/scenario/scenario-form.html\"\n            };\n            value.scenario.name = \"New Scenario\"\n            value.scenario.description = \"New scenario description.\"\n\n            this.scope.tabs.push( value );\n            console.log( \"tab added\" );\n        }\n\n        addTestScenario() {\n            var testScenario:Scenario = new Scenario();\n            testScenario.id = this.scope.scenarios.length + 1;\n            testScenario.name = \"Test Scenario \" + testScenario.id;\n            testScenario.description = \"Test scenario \" + testScenario.id + \" description.\";\n            testScenario.dateUpdated = new Date();\n            testScenario.probability = this.scope.probabilities[ this.getRandomInt( 0, this.scope.probabilities.length-1 ) ];\n            testScenario.impactCost = this.getRandomInt( 100, 1000 );\n            testScenario.impactLength = this.getRandomInt( 5, 20 );\n            testScenario.planEffectiveness = this.scope.effectivenessRatings[ this.getRandomInt( 0, this.scope.effectivenessRatings.length-1 ) ];\n            testScenario.totalImpact = this.getRandomInt( 500, 10000 );\n\n            var item:ScenarioItem = new ScenarioItem();\n            item.id = this.createUUID();\n            item.itemDescription = \"Scenario Item \" + item.id;\n            item.cost = this.getRandomInt( 100, 500 );\n            item.timeToRecover = this.getRandomInt( 5, 20 );\n            item.impactSeverity = this.scope.revenueImpacts[ this.getRandomInt( 0, this.scope.revenueImpacts.length-1 ) ];\n            item.affectedItem = this.scope.affectedItems[ this.getRandomInt( 0, this.scope.affectedItems.length-1 ) ];\n\n            testScenario.scenarioItems.push( item );\n            this.scope.scenarios.push( testScenario )\n            this.scenarioService.saveScenarios( this.scope.scenarios );\n        }\n\n        getRandomInt( min, max ):number {\n            return Math.floor( Math.random() * (max - min + 1) ) + min;\n        }\n\n        createUUID():string {\n            // http://www.ietf.org/rfc/rfc4122.txt\n            var s = [];\n            var hexDigits = \"0123456789abcdef\";\n            for( var i = 0; i < 36; i++ ) {\n                s[ i ] = hexDigits.substr( Math.floor( Math.random() * 0x10 ), 1 );\n            }\n            s[ 14 ] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n            s[ 19 ] = hexDigits.substr( (s[ 19 ] & 0x3) | 0x8, 1 );  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n            s[ 8 ] = s[ 13 ] = s[ 18 ] = s[ 23 ] = \"-\";\n\n            var uuid = s.join( \"\" );\n            return uuid;\n        }\n\n    }\n\n}\n","/// <reference path='../_all.ts' />\r\n\r\nmodule app {\r\n\r\n\texport class ScenarioService {\r\n\r\n        private STORAGE_ID = 'phoenix-angularjs-typescript';\r\n        private httpService: ng.IHttpService;\r\n        private promiseService: ng.IQService;\r\n\r\n\t\tpublic static $inject = [\r\n\t\t\t'$http',\r\n            '$q'\r\n\t\t];\r\n\r\n        constructor( $httpService: ng.IHttpService, $q: ng.IQService ) {\r\n            this.httpService = $httpService;\r\n            this.promiseService = $q;\r\n\t\t}\r\n\r\n        loadScenarios(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            deferred.resolve( JSON.parse( localStorage.getItem( this.STORAGE_ID ) || '[]' ) );\r\n            return deferred.promise;\r\n        }\r\n\r\n        saveScenarios( scenarios: Scenario[] ): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            localStorage.setItem( this.STORAGE_ID, JSON.stringify( scenarios ) );\r\n            deferred.resolve();\r\n            return deferred.promise;\r\n        }\r\n\r\n        loadProbabilities(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            var _this = this;\r\n\r\n            this.httpService.get( \"data/probabilities.json\" ).then(\r\n                ( result: IDataResult ) => {\r\n                    deferred.resolve( result.data.data );\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        loadRevenueImpacts(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            var _this = this;\r\n\r\n            this.httpService.get( \"data/revenueImpacts.json\" ).then(\r\n                ( result: IDataResult ) => {\r\n                    deferred.resolve( result.data.data );\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        loadAffectedItems(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            var _this = this;\r\n\r\n            this.httpService.get( \"data/affectedItems.json\" ).then(\r\n                ( result: IDataResult ) => {\r\n                    deferred.resolve( result.data.data );\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        loadEffectivenessRatings(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            var _this = this;\r\n\r\n            this.httpService.get( \"data/effectivenessRatings.json\" ).then(\r\n                ( result: IDataResult ) => {\r\n                    deferred.resolve( result.data.data );\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        loadInitialData(): ng.IPromise<any> {\r\n            var deferred: ng.IDeferred<any> = this.promiseService.defer();\r\n            var _this = this;\r\n            var finalResult: InitialDataMap = new InitialDataMap();\r\n\r\n            this.promiseService.all([\r\n                this.loadProbabilities(),\r\n                this.loadRevenueImpacts(),\r\n                this.loadAffectedItems(),\r\n                this.loadEffectivenessRatings(),\r\n                this.loadScenarios()\r\n            ]).then(\r\n                ( result: Object[] ) => {\r\n                    finalResult.probabilities = <Probability[]>result[ 0 ];\r\n                    finalResult.revenueImpacts = <RevenueImpact[]>result[ 1 ];\r\n                    finalResult.affectedItems = <AffectedItem[]>result[ 2 ];\r\n                    finalResult.effectivenessRatings = <EffectivenessRating[]>result[ 3 ];\r\n                    finalResult.scenarios = <Scenario[]>result[ 4 ];\r\n                    deferred.resolve( finalResult );\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n\t}\r\n\r\n}\r\n","/// <reference path='../_all.ts' />\r\n/// <reference path=\"../controllers/AppController.ts\" />\r\n/// <reference path=\"../services/ScenarioService.ts\" />\r\n\r\nmodule app {\r\n    'use strict';\r\n\r\n    angular.module( \"angularPhoenix\", [\r\n        'ui.bootstrap',\r\n        'ngRoute',\r\n        'dcbClearInput',\r\n        'myApp.views.view1',\r\n        'myApp.views.view2',\r\n        'myApp.version'\r\n    ] )\r\n    .config( [ '$routeProvider', function( $routeProvider : ng.route.IRouteProvider ) {\r\n        $routeProvider.otherwise( { redirectTo: '/views/view1' } );\r\n    } ] )\r\n    .controller( 'AppController', AppController )\r\n    .service( 'scenarioService', ScenarioService );;\r\n    //.directive('todoBlur', todoBlur)\r\n    //.directive('todoFocus', todoFocus)\r\n    //.service('todoStorage', TodoStorage);\r\n}","/// <reference path='../_all.ts' />\n\nmodule app {\n\texport interface IAppScope extends ng.IScope {\n        scenarios: Scenario[];\n        probabilities: Probability[];\n        revenueImpacts: RevenueImpact[];\n        effectivenessRatings: EffectivenessRating[];\n        affectedItems: AffectedItem[];\n\t\ttabs: Array<Scenario>;\n\t\tlocation: ng.ILocationService;\n\t\tvm: AppController;\n\t}\n}","/// <reference path='../_all.ts' />\r\n\r\nmodule app {\r\n\texport interface IDataResult {\r\n        success: boolean;\r\n\t\tdata: any;\r\n\t}\r\n}","module app {\r\n\r\n    export class AffectedItem {\r\n        id: number;\r\n        value: string;\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n    export class EffectivenessRating {\r\n        id: number;\r\n        value: string;\r\n\t}\r\n\r\n}\r\n","/// <reference path=\"\" />\r\n\r\nmodule app {\r\n\r\n    export class InitialDataMap {\r\n\r\n        scenarios: Scenario[];\r\n        probabilities: Probability[];\r\n        revenueImpacts: RevenueImpact[];\r\n        affectedItems: AffectedItem[];\r\n        effectivenessRatings: EffectivenessRating[];\r\n\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n    export class Probability {\r\n        id: number;\r\n        value: string;\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n    export class RevenueImpact {\r\n        id: number;\r\n        value: string;\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n    export class Scenario {\r\n\r\n        id: number;\r\n        name: string;\r\n        description: string;\r\n        dateUpdated: Date;\r\n        probability: Probability;\r\n        planCost: number;\r\n        impactCost: number;\r\n        impactLength: number;\r\n        totalImpact: number;\r\n        planEffectiveness: EffectivenessRating;\r\n        scenarioItems: ScenarioItem[] = [];\r\n\r\n\t}\r\n\r\n}\r\n","module app {\r\n\r\n    export class ScenarioItem {\r\n\r\n        id: string;\r\n        affectedItem: AffectedItem;\r\n        itemDescription: string;\r\n        timeToRecover: number;\r\n        cost: number;\r\n        impactSeverity: RevenueImpact;\r\n\r\n\t}\r\n\r\n}\r\n","/// <reference path='../controllers/MainController.ts' />\n\nmodule main {\n\texport interface IMainScope extends ng.IScope {\n\t\tnewTodo: string;\n\t\tremainingCount: number;\n\t\tdoneCount: number;\n\t\tallChecked: boolean;\n\t\tstatusFilter: { completed: boolean; };\n\t\tlocation: ng.ILocationService;\n\t\tvm: MainController;\n\t}\n}","/// <reference path='../../../_all.ts' />\n/// <reference path='../interfaces/IMainScope' />\n\nmodule main {\n\t'use strict';\n\n\t/**\n\t * The main controller for the app. The controller:\n\t * - retrieves and persists the model via the todoStorage service\n\t * - exposes the model to the template and provides event handlers\n\t */\n\texport class MainController {\n\n\t\t// $inject annotation.\n\t\t// It provides $injector with information about dependencies to be injected into constructor\n\t\t// it is better to have it close to the constructor, because the parameters must match in count and type.\n\t\t// See http://docs.angularjs.org/guide/di\n\t\tpublic static $inject = [\n\t\t\t'$scope',\n\t\t\t'$location'\n\t\t];\n\n\t\t// dependencies are injected via AngularJS $injector\n\t\t// controller's name is registered in Application.ts and specified from ng-controller attribute in index.html\n\t\tconstructor(\n\t\t\tprivate $scope: main.IMainScope,\n\t\t\tprivate $location: ng.ILocationService\n\t\t) {\n\n\n\t\t}\n\n\t}\n\n}\n"],"sourceRoot":"../../src/ts"}